#+title: Mass-driver demo beats




* Main demo
:PROPERTIES:
:CREATED:  [2023-02-24 Fri 16:15]
:ID:       e105d032-e239-4863-81f9-bdd2085bfcc6
:END:


Let's cut to the chase: changing a thing.

<Open bad_catalog buf> this is a catalog file, which is nice, but some things suck.
- Indentation bad (move left)
- Tags missing (domain, type)
- No PagerDuty link, even default.

<Open commit diff = "updated-catalog"> This is what it should be instead.

So we want to do this, but across dozens of repos.

Introducing mass-driver, a bulk PR creation tool, built with a plugin ecosystem in mind.

For demo purposes, I picked half a dozen repos:
<Open demo_repos.txt>

We need to define what the change looks like:
<Open migration-file buf>
Note that:
- commit message + branch specced
- "driver_name" is a reference to a plugin (we'll see later)
- driver has config, so reusable with different values
- "no forge = no PR", we're just gonna clone&commit locally for now

All right, let's go.
<run make>

- 1 Repo said "Patch does not apply"
- 1 Repo said "already patched"
- Rest said "patched OK"

We can look in the commits to see them.

** The code
:PROPERTIES:
:CREATED:  [2023-02-24 Fri 16:41]
:ID:       7f608d04-95f1-4877-9fc4-24c192eadbec
:END:

The key here is mass-driver defines python plugins, used for changing code, called PatchDrivers.

Here's a simple patchdriver

<open Making your Own Driver>
Note:
- Inherits from a Pydantic class
- Parameters used in driver_config
- returns status via enum

This stuff is testable locally via provided test fixtures,

** FanDuel has it
:PROPERTIES:
:CREATED:  [2023-02-24 Fri 16:45]
:ID:       6917a9ba-6026-463f-9d85-7457421a17a3
:END:

Free software's great, but we all want to ensure business continuity:

I created a FanDuel fork and tested it by writing the Catalog File patchdriver
in a repo of FanDuel's.

<Go over docs, ROADMAP in particular>
